[% USE raw %]
[% USE Asset %]
[% USE KohaDates %]
[% USE Koha %]
[% USE AuthorisedValues %]
[% USE Branches %]
[% USE TablesSettings %]
[% USE ItemTypes %]
[% PROCESS 'i18n.inc' %]
[% SET footerjs = 1 %]
[% INCLUDE 'doc-head-open.inc' %]
<title>[% FILTER collapse %]
    [% t("Holds history for") | html %] [% INCLUDE 'patron-title.inc' no_html = 1 %] &rsaquo;
    [% t("Patrons") | html %] &rsaquo;
    [% t("Koha") | html %]
[% END %]</title>
[% INCLUDE 'doc-head-close.inc' %]
</head>

<body id="pat_holdshistory" class="pat">
[% WRAPPER 'header.inc' %]
    [% INCLUDE 'patron-search-header.inc' %]
[% END %]

[% WRAPPER 'sub-header.inc' %]
    [% WRAPPER breadcrumbs %]
        [% WRAPPER breadcrumb_item %]
            <a href="/cgi-bin/koha/members/members-home.pl">Patrons</a>
        [% END %]
        [% WRAPPER breadcrumb_item %]
            <a href="/cgi-bin/koha/members/moremember.pl?borrowernumber=[% patron.borrowernumber | uri %]">[% INCLUDE 'patron-title.inc' %]</a>
        [% END %]
        [% WRAPPER breadcrumb_item bc_active= 1 %]
            <span>Holds history</span>
        [% END %]
    [% END #/ WRAPPER breadcrumbs %]
[% END #/ WRAPPER sub-header.inc %]

<div class="main container-fluid">
    <div class="row">
        <div class="col-md-10 order-md-2 order-sm-1">
            <main>
                [% INCLUDE 'messages.inc' %]

[% INCLUDE 'members-toolbar.inc' %]
<h1>Holds history</h1>

    [% UNLESS Koha.Preference('IntranetReadingHistoryHolds') %]
        <div class="alert alert-warning">Staff members are not allowed to access patron's holds history</div>
    [% ELSIF is_anonymous %]
        <div class="alert alert-warning">This is the anonymous patron, so no holds history is displayed.</div>
    [% ELSE %]

[% SET show_itemtype_column = Koha.Preference('AllowHoldItemTypeSelection') %]

        <div id="holdshistory" class="page-section">
            <h2>Current holds</h2>
            [% IF patron.holds.count %]
                <table id="table_holdshistory">
                    <thead>
                        <tr>
                            <th class="anti-the">Title</th>
                            <th>Author</th>
                            <th>Barcode</th>
                            <th>Call number</th>
                            <th>Library</th>
                            <th>Hold date</th>
                            <th>Expiration date</th>
                            <th>Waiting date</th>
                            <th>Cancellation date</th>
                            [% IF show_itemtype_column %]
                                <th>Requested item type</th>
                            [% END %]
                            <th>Status</th>
                        </tr>
                    </thead>
                </table>
            [% ELSE %]
                <div class="dialog message">This patron has no current holds.</div>
            [% END %]

            <h2>Historical holds</h2>
            [% IF patron.old_holds.count %]
                <table id="table_oldholdshistory">
                    <thead>
                        <tr>
                            <th class="anti-the">Title</th>
                            <th>Author</th>
                            <th>Barcode</th>
                            <th>Call number</th>
                            <th>Library</th>
                            <th>Hold date</th>
                            <th>Expiration date</th>
                            <th>Waiting date</th>
                            <th>Cancellation date</th>
                            [% IF show_itemtype_column %]
                                <th>Requested item type</th>
                            [% END %]
                            <th>Status</th>
                        </tr>
                    </thead>
                </table>
            [% ELSE %]
                <div class="dialog message">This patron has no historical holds.</div>
            [% END %]
        </div>
    [% END %]

            </main>
        </div> <!-- /.col-md-10.order-md-2 -->

        <div class="col-md-2 order-sm-2 order-md-1">
            <aside>
                [% INCLUDE 'circ-menu.inc' %]
            </aside>
        </div> <!-- /.col-md-2.order-md-1 -->
     </div> <!-- /.row -->

[% MACRO jsinclude BLOCK %]
    [% INCLUDE 'datatables.inc' %]
    [% INCLUDE 'columns_settings.inc' %]
    [% INCLUDE 'str/members-menu.inc' %]
    [% Asset.js("js/members-menu.js") | $raw %]
    [% INCLUDE 'js-biblio-format.inc' %]
    <script>
        $(document).ready(function() {
            var table_settings = [% TablesSettings.GetTableSettings('members', 'holdshistory', 'holdshistory-table', 'json') | $raw %];
            [% UNLESS show_itemtype_column %]
              //Remove item type column settings
              table_settings['columns'] = table_settings['columns'].filter(function(c){return c['columnname'] != 'itemtype';});
            [% END %]
            build_holds_table("#table_holdshistory");
            build_holds_table("#table_oldholdshistory", 1);
            function build_holds_table(table_id, old){
                let table_url = '/api/v1/patrons/[% patron.borrowernumber | uri %]/holds';
                if (old){table_url += '?old=1'}
                $(table_id).kohaTable({
                    ajax: {
                        url: table_url,
                    },
                    order: [],
                    embed: ['biblio', 'item', 'pickup_library', 'pickup_library.branchname'],
                    columns: [
                        {
                            data: "biblio.title:biblio.subtitle:biblio.medium",
                            searchable: true,
                            orderable: true,
                            render: function (data, type, row, meta) {
                                return $biblio_to_html(row.biblio, { link: 1 });
                            }
                        },
                        {
                            data: "biblio.author",
                            searchable: true,
                            orderable: true,
                            render: function (data, type, row, meta) {
                                return row.biblio.author;
                            }
                        },
                        {
                            data: "item.external_id",
                            searchable: true,
                            orderable: true,
                            render: function (data, type, row, meta) {
                                return row.item ? row.item.external_id : "";
                            }
                        },
                        {
                            data: "item.callnumber",
                            searchable: true,
                            orderable: true,
                            render: function (data, type, row, meta) {
                                return row.item ? row.item.callnumber: "";
                            }
                        },
                        {
                            data: "pickup_library_id:pickup_library.branchname",
                            searchable: true,
                            orderable: true,
                            render: function (data, type, row, meta) {
                                return row.pickup_library.name;
                            }
                        },
                        {
                            data: "hold_date",
                            type: "date",
                            searchable: true,
                            orderable: true,
                            render: function (data, type, row, meta) {
                                return $date(row.hold_date);
                            }
                        },
                        {
                            data: "expiration_date",
                            type: "date",
                            searchable: true,
                            orderable: true,
                            render: function (data, type, row, meta) {
                                return $date(row.expiration_date)
                            }
                        },
                        {
                            data: "waiting_date",
                            type: "date",
                            searchable: true,
                            orderable: true,
                            render: function (data, type, row, meta) {
                                return $date(row.waiting_date)
                            }
                        },
                        {
                            data: "cancellation_date",
                            type: "date",
                            searchable: true,
                            orderable: true,
                            render: function (data, type, row, meta) {
                                return $date(row.cancellation_date)
                            }
                        },
                        [% IF show_itemtype_column %]
                        {
                            data: "item_type.item_type",
                            searchable: true,
                            orderable: true,
                            render: function (data, type, row, meta) {
                                if ( row.item_type ) {
                                    return row.item_type.item_type;
                                } else {
                                    return _("Any item type");
                                }
                            }
                        },
                        [% END %]
                        {
                            data: "found", // FIXME filter with dropdown list
                            searchable: true,
                            orderable: true,
                            render: function (data, type, row, meta) {
                                if ( row.status == 'F' ) {
                                    return _("Fulfilled");
                                } else if (row.cancellation_date) {
                                    let r = _("Cancelled");
                                    if (row.cancellation_reason){
                                        r += "(%s)".format("FIXME"); //FIXME Add HOLD_CANCELLATION description
                                    }
                                    return r;
                                } else if (row.status == 'W') {
                                    return _("Waiting");
                                } else if (row.status == 'P') {
                                    return _("Processing");
                                } else if (row.status == 'T') {
                                    return _("In transit");
                                }

                                return _("Pending");
                            }
                        },
                    ],
                }, table_settings);
            }
        });
    </script>
[% END %]

[% INCLUDE 'intranet-bottom.inc' %]
