.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Koha::App::Plugin::CSRF 3pm"
.TH Koha::App::Plugin::CSRF 3pm "2025-04-28" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::App::Plugin::CSRF
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    $app\->plugin(\*(AqCSRF\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Enables \s-1CSRF\s0 protection in a Mojolicious app
.SH "METHODS"
.IX Header "METHODS"
.SS "register"
.IX Subsection "register"
Called by Mojolicious when the plugin is loaded.
.PP
Defines an `around_action` hook that will prevent \s-1CSRF\s0 attacks.
.PP
If the \s-1HTTP\s0 request method is safe (\s-1GET, HEAD, OPTIONS, TRACE\s0) and the request
contains an `op` parameter whose value starts with \*(L"cud\-\*(R" (which means it's a
Create, Update or Delete operation), it will immediately return a 400 response.
.PP
If the \s-1HTTP\s0 request method is unsafe (\s-1POST, PUT, DELETE, PATCH, CONNECT\s0) and
the request contains an `op` parameter whose value does not start with \*(L"cud\-\*(R",
it will immediately return a 400 response.
.PP
If the \s-1HTTP\s0 request method is unsafe (\s-1POST, PUT, DELETE, PATCH, CONNECT\s0) and
the \s-1CGISESSID\s0 cookie is set, the \s-1CSRF\s0 token is checked. A 403 response is
immediately returned if the \s-1CSRF\s0 token is missing or invalid.
If the \s-1CGISESSID\s0 cookie is missing, it means that we are not authenticated or
we are authenticated to the \s-1API\s0 by another method (\s-1HTTP\s0 basic or OAuth2). In
this case, no verification is done.
.SS "is_csrf_valid"
.IX Subsection "is_csrf_valid"
Checks if a \s-1CSRF\s0 token exists and is valid
.PP
.Vb 1
\&    $is_valid = $plugin\->is_csrf_valid($req)
.Ve
.PP
\&\f(CW$req\fR must be a Mojo::Message::Request object
