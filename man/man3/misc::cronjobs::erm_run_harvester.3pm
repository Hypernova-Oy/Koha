.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "misc::cronjobs::erm_run_harvester 3pm"
.TH misc::cronjobs::erm_run_harvester 3pm "2025-09-25" "perl v5.32.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
erm_run_harvester.pl This script will run the SUSHI harvesting for usage data providers
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
erm_run_harvester.pl
  \-\-begin\-date <\s-1YYYY\-MM\-DD\s0>
  [ \-\-dry\-run ][ \-\-debug ][ \-\-end\-date <\s-1YYYY\-MM\-DD\s0> ]
.PP
.Vb 7
\& Options:
\&   \-\-help                         brief help message
\&   \-\-man                          detailed help message
\&   \-\-debug                        print additional debug messages during run
\&   \-\-dry\-run                      test run only, do not harvest data
\&   \-\-begin\-date <YYYY\-MM\-DD>      date to harvest from
\&   \-\-end\-date <YYYY\-MM\-DD>        date to harvest until, defaults to today if not set
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-help\fR" 8
.IX Item "-help"
Print a brief help message and exits.
.IP "\fB\-man\fR" 8
.IX Item "-man"
Print a detailed help message and exits.
.IP "\fB\-\-debug\fR" 8
.IX Item "--debug"
Add debug statements to run
.IP "\fB\-\-begin\-date\fR" 8
.IX Item "--begin-date"
Date from which to harvest, previously harvested data will be ignored
.IP "\fB\-\-end\-date\fR" 8
.IX Item "--end-date"
Date to harvest until, defaults to today if not set
.IP "\fB\-\-dry\-run\fR" 8
.IX Item "--dry-run"
Test run only, do not harvest
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script fetches usage data from \s-1ERM\s0 data providers defined in the interface.
.SS "Configuration"
.IX Subsection "Configuration"
This script harvests from the given date to the specified end date, or until today
.SH "USAGE EXAMPLES"
.IX Header "USAGE EXAMPLES"
\&\f(CW\*(C`erm_run_harvester.pl\*(C'\fR \- With no arguments help is printed
.PP
\&\f(CW\*(C`erm_run_harvester.pl \-\-begin\-date 2000\-01\-01\*(C'\fR \- Harvest from the given date until today
.PP
\&\f(CW\*(C`erm_run_harvester.pl \-\-begin\-date 2000\-01\-01 \-\-end\-date 2024\-01\-01\*(C'\fR \- Harvest from the given date until the end date
.PP
\&\f(CW\*(C`erm_run_harvester.pl \-\-begin\-date 2000\-01\-01 \-\-end\-date 2024\-01\-01 \-\-debug \-\-dry\-run\*(C'\fR \- Dry run, with debuig information
