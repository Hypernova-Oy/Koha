.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "C4::SIP::SIPServer 3pm"
.TH C4::SIP::SIPServer 3pm "2025-09-25" "perl v5.32.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
\fIoptions\fR
.IX Subsection "options"
.PP
As per Net::Server documentation, override \*(L"options\*(R" to provide your own
custom options to the Net::Server* object. This allows us to use the Net::Server
infrastructure for configuration rather than hacking our own configuration into the
object.
.PP
\fIpost_configure_hook\fR
.IX Subsection "post_configure_hook"
.PP
As per Net::Server documentation, this method validates our custom configuration.
.PP
\fIpost_accept_hook\fR
.IX Subsection "post_accept_hook"
.PP
This hook occurs after the client connection socket is created, which gives
us an opportunity to enable support for \s-1TCP\s0 keepalives using the \s-1SO_KEEPALIVE\s0
socket option.
.PP
By default, the kernel-level defaults (in seconds) are used. You can view these in the output of \*(L"sysctl \-a\*(R":
net.ipv4.tcp_keepalive_intvl = 75
net.ipv4.tcp_keepalive_time = 7200
.PP
Alternatively, you can use \*(L"custom_tcp_keepalive_time\*(R" and \*(L"custom_tcp_keepalive_intvl\*(R" to define
your own custom values for the socket. Note that these parameters are defined at the top server-level
and not on the listener-level.
.PP
If you lower \*(L"custom_tcp_keepalive_time\*(R" below 75, you will also need to set \*(L"custom_tcp_keepalive_intvl\*(R".
The \*(L"tcp_keepalive_time\*(R" is the initial time used for the keepalive timer, and the \*(L"tcp_keepalive_intvl\*(R"
is the time used for subsequent keepalive timers. However, timers only send keepalive ACKs if the idle time
elapsed is greater than \*(L"tcp_keepalive_time\*(R".
.PP
Thus, if \*(L"tcp_keepalive_time = 10\*(R" and \*(L"tcp_keepalive_intvl = 5\*(R", a keepalive \s-1ACK\s0 will be sent every 10 seconds
of idle time. If \*(L"tcp_keepalive_intvl = 10\*(R" and \*(L"tcp_keepalive_time = 5\*(R", a keepalive \s-1ACK\s0 will be sent after 5
seconds of idle time, and the next keepalive \s-1ACK\s0 will be sent after 10 seconds of idle time. Generally speaking,
it's best to set \*(L"tcp_keepalive_time\*(R" to be higher than \*(L"tcp_keepalive_intvl\*(R".
.PP
Reminder: once these settings are set on the socket, they are handled by the operating system kernel, and not
by the \s-1SIP\s0 server application. If you are having trouble with your settings, monitor your \s-1TCP\s0 traffic using
a tool such as \*(L"tcpdump\*(R" to review and refine how they work.
